FaceBook에서 Flux아키텍처를 발표했을 당시 flux에 대한 오픈소스 라이브러리를 함께 공개하였으나 이 라이브러리에는 디스패처만 구현되어 있을 뿐 완전한 flux 프레임워크라고 부르기엔 다소 무리가 있었다고 한다.
따라서 flux 기반의 향상된 라이브러리를 공개, 지원하기 시작했는데 이렇게 공개된 라이브러리중 가장 널리 사용되고 대표적인 라이브러리중 하나가 redux이다.
#FLUX의 문제점과 Redux에서의 해결방법
문제점1.스토어의 코드는 애플리케이션 상태를 삭제하지 않고는 리로딩이 불가능하다.
=>스토어는 애플리케이션 상태만을 가지게 하여 리로딩하지 않도록 했고, 또 다른 객체인 리듀서를 통해 모든 상태변환 로직을 관리하게 했다.
리듀서를 리로딩하는것으로 애플리케이션 상태를 잃어버리지않고 관련 로직만을 리로딩할 수 있게 되면서 문제 해결!
*리듀서란?이전 상태와 Action을 합쳐 새로운 state를 만드는 조작.
문제점2.애플리케이션 상태는 매 액션마다 재 기록된다.
액션이 스토어로 전달되었을때, 기존의 애플리케이션 상태를 수정하는 대신 그 상태를 복사한 뒤 복사본을 수정한다.
*디스패처란?
여러 다중 스레드 서버 프로세스가 SMTP 연결 서비스에 대한 역활을 공유할 수 있게 하는 다중 스레드 디스패칭 에이전트
자체 구성에 나열된 TCP 포트에 대한 중앙 수신기의 역활 수행.
*SMTP란?
Simple Mail Transfer Protocol
인터넷에서 이메일을 보내기 위해 이용되는 프로토콜
*TCP란?
Transmission Control Protocol
IP 프로토콜 위에서 연결형 서비스를 지원하는 전송계층 프로토콜
-redux란?
자바스크립트 앱을 위한 예측 가능한 상태 컨테이너
오픈소스 자바스크립트 라이브러리의 일종으로, state를 이용해 웹사이트 혹은 애플리케이션의 상태관리를 해 줄 목적으로 사용
일관적으로 동작하고 서로 다른 환경에서 작동하고 테스트하기 쉬운 앱을 작성하도록 도와준다.
*컨테이너? 
같은 타입의 여러 객체를 저장하는 일종의 집합
클래스 템플릿으로서, 컨테이너 변수를 선언할 때 컨테이너에 포함할 요소의 타입을 명시할 수 있다.
복사 생성과 대입을 할 수 있는 타입의 객체만을 저장할 수 있다.
요소의 추가 및 제거를 포함한 다양한 작업을 도와주는 여러 멤버 함수를 포함하고 있다.
-flux란?
facebook에서 클라이언트-사이드 웹 어플리케이션을 만들기 위해 사용하는 어플리케이션 아키텍쳐
단방향 데이터흐름을 활용해 뷰 컴포넌트를 구성하는 React를 보완하는 역활을 한다.
이전까지의 프레임워크와는 달리 패턴과 달리 패턴과 같은 모습을 하고있기 때문에 새로 코드의 작성없이도 바로 flux를 이용해 사용할 수 있다.
https://ko.redux.js.org/introduction/getting-started/
http://tcpschool.com/cpp/cpp_container_intro
https://blog.naver.com/backsajang420/22137124428
https://docs.oracle.com/cd/E19957-01/820-0512/bgagx/index.html

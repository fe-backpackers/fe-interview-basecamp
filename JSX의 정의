JSX란?
자바스크립트의 확장문법으로서 React.createElement를 호출하기 위한 문법으로 사용되었고,React 17.0 이상에서는 _JSX로 트랜스파일도 가능해졌다.
브라우저에서 실행되기전에 코드가 번들링되는 과정에서 바벨을 사용하여 일반 자바스크립트 형태의 코드로 변환된다.
*번들링?
Bundling.
모듈들의 의존성 관계를 파악하여 그룹화시켜주는 작업
요리키트, 식물재배 키트…. 등과 같이 어떠한 것을 만들때 쉽게 만들수 있도록 해주는것
*바벨?
바벨이라는 도구를 통해 구형 브라우져에서도 돌아가게끔 최신 문법을 변환해주는 도구!
문법이 새로 나왔지만 구식인 브라우저는 이것을 적용을해주지 않는다! 
이때 바벨은 구형 브라우져에서도 돌아가게끔 최신 문법을 변환해주는 도구!
JSX를 사용함으로써 React.creatElement를 일일이 호출하지 않고도 편하게 UI를 렌더링할 수 있다.
*렌더링?
아직은 실제로 제품화되어 있지 않은, 계획 단계에 있는 공업 제품을 전문가가 아니어도 그것의 외관을 이해할 수 있도록 실물 그대로 그린 완성 예상도. 주로 디자인 용어로 쓰임
[JSX문법 규칙]
1.컴퍼넌트에 여러 요소가 있다면 반드시 부모 하나로 감싸주어야 한다.
-Virtual Dom에서 컴포넌트 변화를 효율적으로 비교할수 있게 된다.
2.자바스크립트 표현
-JSX가 내부에서 코드를 {}로 감싸면 자바스크립트 표현식을 작성할 수 있다.
3.조건부 연산자
조건에 따라 다른 내용을 렌더링 해야 할때는 
1)JSX 밖에서 if문을 사용하여 사전에 값을 설정하거나
2){} 안에 조건부 연산자인 삼항연산자를 사용한다.
4.AND(&&)를 사용한 조건부 렌더링
리액트에서 false를 렌더링할때는 null과 마찬가지로 아무것도 나타나지 않는다. 
다만 falsy한 값은 예외적으로 화면에 나타난다.
*falsy한 값? 
Boolean 문맥에서 fasle로 해결되는 값

5.undefinded를 렌더링 하지 않기
JSX 내부에서 undefined를 렌더링하는 것은 괜찮지만 바로 undefinded를 사용할 경우 다음과 같은  오류가 발생한다.
￼
따라서, 어떤 값이 -할 수도 있다: OR(||) 연산자를 사용하여 undefined일 때 사용할 값을 지정하여 주어 오류를 방지할수있다.

https://ko.reactjs.org/docs/react-without-jsx.html#gatsby-focus-wrapper
[리액트를 다루는 기술/김민준/길벗]
https://developer.mozilla.org/ko/docs/Glossary/Falsy

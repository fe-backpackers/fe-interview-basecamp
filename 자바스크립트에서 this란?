자바스크립트에서 this란?
this의 값은 함수를 호출한 방법에 의해 결정됩니다
실행중에는 할당으로 설정할 수 없고 함수를 호출할 때마다 다를 수 있습니다.
ES5는 함수를 어떻게 호출했는지 상관하지 않고 this 값을 설정할 수 있는 bind메서드를 도입하였습니다.
ES2015는 스스로의 this 바인딩을 제공하지 않는 화살표 함수를 추가했습니다.
실행컨텍스트의 프로퍼티는 비엄격모드에서 항상 객체를 참조하며, 엄격모드에서는 어떠한 값이든 될 수 있습니다.
#전역문맥
this는 엄격 모드 여부에 관계없이 전역 객체를 참조합니다.
#함수문맥
-단순호출
this의 값이 호출에 의해 설정되지 않으므로, 기본값으로 브라우저에서는  window인 전역객체를 참조합니다.
반면,엄격모드에서 this값은 실행문맥에 진입하며 설정되는 값을 유지하므로 this는 undefined로 남아있습니다.
this의 값을 다른 문맥으로 넘길때에는 call이나 apply를 사용합니다.
비엄격모드에서 this로 전달된 값이 객체가 아닌 경우,call과 apply는 이를 객체로 변환하기 위한 시도를 합니다.
null과  undefined값은 전역 객체가 됩니다.
-bind 메서드
f.bind(someObject)를 호출하면 f와 같은 본문과 범위를 가졌지만 this는 원본함수를 가진 새로운 함수를 생성합니다.
새 함수의 this는 호출방식과 상관없이 영구적으로 bind의 첫번째 매개변수로 고정됩니다.
-화살표함수
this는 자신을 감싼 정적범위. 전역코드에서는 전역객체.
Obj.bar에 할당된 함수는 화살표 함수로 생성된 다른 함수를 반환한다.
반환된 함수가 호출될때, this는 항상 초기에 설정된 값
-객체의 메서드
This 바인딩은 가장 즉각으로 멤버 대상에 영향을 받는다.
-객체의 프로토타입 체인에서의 this
메서드가 어떤 객체의 프로토타입 체인 위에 존재하면 this의 값은 그 객체가 메서드를 가진것 마냥 설정됨
프로토타입 상속.
-접근자와 설정자의 this
접근자나 설정자로 사용하는 함수의 this는 접근하거나 설정하는 속성을 가진 객체로 묶는다.
-생성자로서
함수를 new 키워드와 함께 생성자로 사용하면 this는 새로 생긴 객체에 묶인다
-Dom 이벤트처리기로서
this는 이벤트를 발사한 요소로 설정됨.
-인라인 이벤트 핸들러에서
-this는 처리기를 배치한 DOM요소로 설정됨
내부함수의 this는 정해지지않았으므로 전역/window 객체를 반환함
비엄격모드에서 this를 설정하지않은 경우의 기본값.



https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/this

